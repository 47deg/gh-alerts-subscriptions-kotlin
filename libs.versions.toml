[versions]
arrow = "1.1.3-alpha.7"
arrowGradleConfig = "0.10.1"
coroutines = "1.6.3"
kotlin = "1.7.0"
kotest = "5.3.1"
kotest-plugin = "5.3.1"
kover = "0.5.1"
detekt = "1.20.0"
ktor = "2.0.1"
logback = "1.2.11"
sqldelight = "2.0.0-alpha03"
testcontainers = "1.17.2"
hikari = "5.0.1"
postgresql = "42.3.5"
kotest-arrow = "1.1.0.128-SNAPSHOT"
jib = "2.7.1"
flyway = "8.5.13"
kotlin-logging = "2.1.20"
avro4k = "1.6.0"

[libraries]
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-arrow = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotest-arrow" }
kotest-arrow-fx = { module = "io.kotest.extensions:kotest-assertions-arrow-fx-coroutines", version.ref = "kotest-arrow" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-defaultheaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
sqldelight-jdbc = { module = "app.cash.sqldelight:jdbc-driver", version.ref = "sqldelight" }
sqldelight-postgresql = { module = "app.cash.sqldelight:postgresql-dialect", version.ref = "sqldelight" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
klogging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlin-logging" }
avro4k = { module = "com.github.avro-kotlin.avro4k:avro4k-core", version.ref = "avro4k" }


[bundles]
arrow = ["arrow-core", "arrow-fx"]
ktor-client = [
    "ktor-client-content-negotiation",
    "ktor-client-serialization"
]
ktor-server = [
    "ktor-server-core",
    "ktor-server-cors",
    "ktor-server-defaultheaders",
    "ktor-server-netty",
    "ktor-server-auth",
]
kotest = [
    "kotest-assertionsCore",
    "kotest-frameworkEngine",
    "kotest-property",
    "kotest-runnerJUnit5",
    "kotest-arrow",
    "kotest-arrow-fx"
]

[plugins]
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest-plugin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
