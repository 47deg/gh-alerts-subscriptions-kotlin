[versions]
arrow = "2.0.0-SNAPSHOT"
suspendapp = "0.3.1"
arrowGradleConfig = "0.10.1"
coroutines = "1.6.4"
kotlin = "1.7.22"
kotest = "5.5.4"
kotest-plugin = "5.5.4"
kover = "0.6.1"
detekt = "1.22.0"
logback = "1.4.5"
testcontainers = "1.17.6"
postgresql = "42.5.4"
kotest-arrow = "1.3.0"
kotest-arrow-fx = "1.3.0"
kotest-spring = "1.1.2"
kotest-testcontainers = "1.3.4"
flyway = "9.12.0"
kotlin-logging = "3.0.4"
avro4k = "1.6.0"
kotlin-kafka = "0.3.0"
kotlinx-serialization-jsonpath = "0.2.0"
kotlinx-datetime = "0.4.0"
kafka = "7.3.0"
avro = "1.11.1"
prometheus = "1.10.2"
tegralOpenApi = "0.0.3"

[libraries]
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
arrow-fx-resilience = { module = "io.arrow-kt:arrow-fx-resilience", version.ref = "arrow" }
suspendapp = { module = "io.arrow-kt:suspendapp", version.ref = "suspendapp" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-arrow = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotest-arrow" }
kotest-arrow-fx = { module = "io.kotest.extensions:kotest-assertions-arrow-fx-coroutines", version.ref = "kotest-arrow-fx" }
<<<<<<< HEAD
kotest-testcontainers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotest-testcontainers" }
kotest-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-spring" }
||||||| parent of 7063340 (test: add simple subscription controller test)
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-defaultheaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-client = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
=======
kotest-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-spring" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-defaultheaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-client = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
>>>>>>> 7063340 (test: add simple subscription controller test)
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
klogging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlin-logging" }
avro4k = { module = "com.github.avro-kotlin.avro4k:avro4k-core", version.ref = "avro4k" }
kotlin-kafka = { module = "io.github.nomisrev:kotlin-kafka", version.ref = "kotlin-kafka" }
kotlinx-serialization-jsonpath = { module = "io.github.nomisrev:kotlinx-serialization-jsonpath", version.ref = "kotlinx-serialization-jsonpath" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kafka-schema-registry = { module = "io.confluent:kafka-schema-registry-client", version.ref = "kafka" }
kafka-avro-serializer = { module = "io.confluent:kafka-avro-serializer", version.ref = "kafka" }
avro = { module = "org.apache.avro:avro", version.ref = "avro" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "prometheus" }

[bundles]
arrow = ["arrow-core", "arrow-fx", "arrow-fx-resilience"]
kotest = [
    "kotest-assertionsCore",
    "kotest-frameworkEngine",
    "kotest-property",
    "kotest-runnerJUnit5",
    "kotest-arrow",
<<<<<<< HEAD
    "kotest-arrow-fx",
    "kotest-spring",
    "kotest-testcontainers"
||||||| parent of 7063340 (test: add simple subscription controller test)
    "kotest-arrow-fx"
=======
    "kotest-arrow-fx",
    "kotest-spring"
>>>>>>> 7063340 (test: add simple subscription controller test)
]

[plugins]
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest-plugin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
